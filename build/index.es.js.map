{"version":3,"file":"index.es.js","sources":["../node_modules/tslib/tslib.es6.js","../src/utils/message.ts","../src/utils/admixtures.ts","../src/utils/help.ts","../src/validators/argument.ts","../src/validators/verifyErrors.ts","../src/main/validators.ts","../src/utils/contextHttp.ts","../src/main/routers.ts","../src/main/handler.ts","../src/main/middleware.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import * as SW from '../../functions';\n\n/**\n * get data error\n *\n * @param data -\n * ```json\n * {\n *     message: message of error \"bad request\",\n *     errors: data errors\n * }\n * ```\n */\nfunction getDataErrors(data: SW.DataError): SW.DataError {\n    return data\n}\n\n/**\n * Server error Generate\n *\n * @param data -\n */\nconst error = (data: SW.DataError): void => {\n    throw data\n}\n\n/**\n * Class to handle exceptions\n */\nexport class ClassException implements SW.ClassException {\n\n    /**\n     * Server error Generate\n     *\n     */\n    error = error\n\n    /**\n     * Server error Generate\n     *\n     * @param data - \n     */\n    server_error = (data: SW.DataError): void => {\n        const {message, errors} = getDataErrors(data);\n        error({\"statusCode\": 500, \"message\": message, errors});\n    }\n\n    /**\n     * Bad request Generate\n     *\n     * @param data - \n     */\n    bad_request = (data: SW.DataError) => {\n        const {message, errors} = getDataErrors(data);\n        error({\"statusCode\": 400, \"message\": message, errors});\n    }\n\n}\n\nexport const Exception = new ClassException();\n\n\n/**\n * Classes for handling Http reply messages\n */\nclass ClassMessage implements SW.ClassMessage {\n\n    /**\n     * send response request\n     * \n     * @param res - \n     * @param statusCode - number status\n     * @param message - message response\n     */\n    response(res: any, statusCode: number, message: any) {\n\n        /**\n         * stacked error information\n         */\n        const {stack} = message;\n\n        /**\n         * data response\n         */\n        const response = {\n            message: message?.message,\n            errors: message?.errors,\n            statusCode: statusCode ?? 200,\n        }\n        /**\n         *\n         */\n        const data_send = stack ? {...response, stack} : response;\n        if(!res) throw data_send;\n        if (res)\n            res.writeHead(response.statusCode, { 'Content-Type': 'application/json' });\n            res.write(JSON.stringify(data_send));\n            return res.end();\n    }\n\n    /**\n     * send response request (error)\n     * \n     * @param res -\n     * @param mess -\n     */\n    errors(res: any, mess: any) {\n        this.response(res, 500, mess)\n    }\n\n    /**\n     * send response request (success)\n     * \n     * @param res -\n     * @param mess -\n     */\n    success(res: any, mess: any) {\n        this.response(res, 200, mess)\n    }\n\n    /**\n     * send response request (create)\n     * \n     * @param res -\n     * @param mess -\n     */\n    create(res: any, mess: any) {\n      this.response(res, 201, mess)\n    }\n}\n\nexport const Message =  new ClassMessage();\n","\ntype callbackMap = (value: any, index: string | number, data: any) => any\ntype admixturesType = {\n    map: any,\n    size: any,\n    filter: (callback: callbackMap) => Promise<any[]>,\n    get: any,\n    has: any,\n    valueOf: any,\n    omit: any,\n    find: any,\n    flatten: (level: number) => Promise<any[]>\n}\n\nexport const admixtures: admixturesType = {\n    get(key: string, notInherited?: boolean) {\n        if(notInherited) return this[key];\n        if(Object.prototype.hasOwnProperty.call(this, key)) {\n            return this[key];\n        }\n    },\n    has(key: string, notInherited?: boolean) {\n        if(notInherited) return !!this[key];\n        return Object.prototype.hasOwnProperty.call(this, key);\n    },\n    size(): any {\n        return Array.isArray(this) ? this.length : Object.keys(this).length;\n    },\n    map(callback: any): any {\n        return new Promise((resolve) => {\n            const length: number = Array.isArray(this) ? this.length : Object.keys(this).length,\n                data = new Array(length);\n\n            let index = -1;\n\n            for (const key in this) {\n                ++index;\n                const element = this[key];\n                data[index] = callback(element, key, this);\n                if (index === length - 1){\n                    resolve(data);\n                }\n            }\n        })\n    },\n    filter(callback: any): any {\n        return new Promise((resolve) => {\n            const length: number = Array.isArray(this) ?\n                    this.length : Object.keys(this).length,\n                data = [];\n            let index = -1;\n\n            for (const key in this) {\n                ++index;\n                const element = this[key];\n                if (callback(element, key, this)){\n                    data.push(element);\n                }\n                if (index === length - 1){\n                    resolve(data);\n                }\n            }\n        })\n    },\n    omit(arrayKeys: string[]): any {\n        return new Promise((resolve) => {\n            const length = arrayKeys.length;\n            for (let i = 0; i < length; i++) {\n                delete this[arrayKeys[i]];\n                if(i === length) resolve(this);\n            }\n        })\n    },\n    find(callback: any): Promise<any> {\n        return new Promise((resolve) => {\n            for (const key in this) {\n                const element = this[key];\n                if (callback(element, key, this)){\n                    resolve(this[key]);\n                }\n            }\n        })\n    },\n    flatten(level = 1) {\n        let levelCount = 1;\n        async function flattenDeep(arr1: any) {\n            return arr1.reduce((acc: any, val: any) => Array.isArray(val) && ++levelCount <=  level?\n                acc.concat(flattenDeep(val)) : acc.concat(val), []);\n        }\n        return new Promise((resolve) => {\n            resolve(flattenDeep(this));\n        });\n    }\n}\n\nexport const filter = (value: any, callback: callbackMap) =>  {\n    return admixtures.filter.call(value, callback);\n};\n\nexport const map = (value: any, callback: any) =>  {\n    return admixtures.map.call(value, callback);\n};\n\nexport const flatten = (value: any, level = 1) =>  {\n    return admixtures.flatten.call(value, level);\n};\n\nexport const get = (value: any, key: string | number,  notInherited?: boolean) =>  {\n    return admixtures.get.call(value , key, notInherited);\n};\n\nexport const has = (value: any, key: string,  notInherited?: boolean) =>  {\n    return admixtures.has.call(value , key, notInherited);\n};\n\nexport const omit = (value: any, arrayKeys: string[]) =>  {\n    return admixtures.omit.call(value , arrayKeys);\n};\n\nexport const find = (value: any, callback: any) =>  {\n    return admixtures.find.call(value, callback);\n};\n","import * as SW from '../../functions';\nimport {filter, flatten} from './admixtures'\n\n/**\n * Identify if it is running in a browser\n */\nexport const isBrowser: () => boolean = () => typeof window !== 'undefined'\n    && ({}).toString.call(window) === '[object Window]';\n\n/**\n * Identify if it is running in a nodejs\n */\nexport const isNode: () => boolean = () => typeof global !== \"undefined\"\n    && ({}).toString.call(global) === '[object global]';\n\n/**\n * validate if it is an array\n * \n * @param elm - element validation\n * @returns boolean\n */\nexport function isArray(elm: any): boolean {\n    return Array.isArray(elm);\n}\n/**\n * validate if it is an objet\n * \n * @param elm - element validation\n * @returns boolean\n */\nexport function isObject(elm: any): boolean {\n    return elm instanceof Object;\n}\n/**\n * validate if it is an string\n * \n * @param elm - element validation\n * @returns boolean\n */\nexport function isString(elm: any): boolean {\n    return typeof elm === \"string\";\n}\n/**\n * validate if it is an number\n * \n * @param elm - element validation\n * @returns boolean\n */\nexport function isNumber(elm: any): boolean {\n    return typeof elm === \"number\";\n}\n\n/**\n * Functions validations (isArray, isString)\n * \n */\nexport const validate: SW.validate = {\n    Array: isArray,\n    String: isString,\n    Number: isNumber,\n    Object: isObject,\n    Browser: isBrowser,\n    Node: isNode\n}\n\n/**\n * get_middlewares Middleware extraction, can be an array of function objects or an object\n * \n * @example\n * Array functions\n * Sandwich.handler(Users, [isAuth])\n * \n * Array objects\n * ```ts\n * Sandwich.handler(Users, [\n * {\n *   methods: ['POST'],\n *   middleware: [isAuth]\n * }\n *])\n *```\n *\n *```ts\n * objects\n * Sandwich.handler(Users, {\n *   methods: ['POST'],\n *   middleware: [isAuth]\n * })\n * ```\n * \n * @remarks\n * The extraction of each middleware is selected according to the method of the http request\n * \n * @param middlewares - list middlewares\n * @param method - method request (post, get)\n */\nexport async function getMiddlewares(middlewares: SW.middlewares, method: string) {\n    try {\n        let isFlatten = false;\n         if (!(typeof middlewares === 'object')) return middlewares;\n         const resp_middlewares: any = await filter(middlewares,(middleware: SW.multiMiddlewareType) => {\n            const middleware_is_function = typeof middleware === 'function';\n            if(middleware_is_function) return true;\n\n            if(!middleware.methods) return true;\n\n            const methods_is_string = typeof middleware.methods  === 'string';\n            const methods_is_array = middleware.methods instanceof Array;\n            if(!methods_is_string && !methods_is_array)\n                throw \"methods: An Array or String data type is expected\";\n\n            if(middleware.middleware instanceof Array)\n                isFlatten = true;\n\n            const methods =  typeof middleware.methods  === 'string'\n            ? [middleware.methods]: middleware.methods;\n            return toUpper(methods).includes(method.toUpperCase());\n        }).then((resp: any) =>  resp.map((middleware: SW.multiMiddlewareType) => {\n             return middleware.middleware ?? middleware\n         }));\n        return isFlatten ?\n            await flatten(resp_middlewares).then(val => val.valueOf()) :\n            resp_middlewares.valueOf();\n    }catch (e) {\n        console.error(e);\n    }\n}\n\n/**\n * \n * @param arr -\n * @returns any[]\n */\nexport function toUpper(arr: string[]): string[] {\n    return arr.filter((val) => val).map((val: string) => val.toUpperCase());\n}\n\n","import * as SW from '../../functions';\nimport {Exception} from '../utils/message';\nimport {validate} from \"../utils/help\";\n\n/**\n *\n * Response messages due to validation failure\n */\nconst messageArgument: SW.MessageArgument = {\n    validation: () => ({\n        message: `validation_custom`\n    }),\n    required: () => ({\n        message: \"required_field\"\n    }),\n    min: (props) => ({\n        message: \"minimum_characters\",\n        value: props.validValue\n    }),\n    max: (props) => ({\n        message: \"maximum_characters\",\n        value: props.validValue\n    }),\n    strict: (props) => ({\n        message: \"{key}_expected_data_type_{type}\"\n            .replace('{key}', props.key)\n            .replace('{type}', props.type)\n            .toLowerCase()\n    })\n}\n\n/**\n *  list of validation functions\n *\n * @param funcArguments -\n */\nconst funcArguments: SW.funcArguments = {\n    /**\n     *  * custom validation, for the data type specified in the argument\n     *\n     * @example\n     * ```json\n     * {\n     *    email: {\n     *    type: Sandwich.String, validation: (value: string) => typeof value == 'string'\n     *  }\n     * }\n     * ```\n     * @param validValue -\n     * @param value -\n     */\n    validation: ({validValue, value}) => validValue(value),\n    /**\n     * Validate value max\n     *\n     * @param type -\n     * @param validValue -\n     * @param value -\n     */\n    max: ({type, validValue, value}) => {\n        if (typeof value === 'number'){\n            return (value ?? 0) <= (validValue ?? 0);\n        } else {\n            const len = (type?.length ?? 0) ?? (type?.toString()?.length ?? 0);\n            return len <= (validValue ?? 0);\n        }\n\n    },\n    /**\n     * Validate value min\n     *\n     * @param type -\n     * @param validValue -\n     * @param value -\n     */\n    min: ({type, validValue, value}) => {\n        if (typeof value === 'number'){\n            return (validValue ?? 0) >= (validValue ?? 0);\n        } else {\n            const len = (type?.length ?? 0) ?? (type?.toString()?.length ?? 0);\n            return len >= (validValue ?? 0);\n        }\n    },\n    /**\n     * validate value required\n     *\n     * @param validValue -\n     * @param value -\n     */\n    required: ({validValue, value}) => validValue ? (!!value || value === 0) : true,\n    /**\n     * Validate value type\n     *\n     * @param value -\n     * @param func -\n     * @param scheme -\n     */\n     type: (value, func, scheme) => {\n        const list_type = ['String', 'Number', 'Object'];\n\n        switch (func.name) {\n            case 'Array': return func.from(value);\n            default:\n                if (list_type.includes(func.name)){\n                    return new func(value)\n                }\n                return func(value, scheme);\n        }\n    },\n    /**\n     * Strictly validates the value of a data type\n     *\n     * @param strict - true to validate or false not to validate strict mode\n     * @param type - Array\n     * @param key - data (occupation)\n     * @param value - `Developer`\n     */\n    validStrict: (strict, type, key, value) => {\n        const valid = validate[type];\n\n        if (strict && valid instanceof Function) {\n            !valid(value) ? Exception.bad_request({\n                message: \"args_validation_errors\",\n                errors: [{\n                    [key]: [messageArgument.strict({key, type})]\n                }]\n            }): true\n        }\n    }\n}\n\n/**\n * Validate a data type\n *\n * @param value - value to validate \"Developer\"\n * @param key - value key (occupation)\n * @param scheme - scheme validation\n * ```json\n * {type: String}\n * ```\n */\nasync function validType ({value, key, scheme}: SW.compareProps): Promise<any> {\n    const type = scheme['type'];\n    const strict = scheme['strict'];\n    const required = scheme['required'];\n\n    if (type) {\n        const name: string = type['type'];\n        required && value ? funcArguments.validStrict(strict, name, key, value): null;\n        if (value === null || value === undefined) return value;\n        return funcArguments.type(value, type, scheme);\n    } else {\n        Exception.server_error({message: `${key} => ${value} no data type`});\n    }\n}\n\n/**\n *\n * @param messages -\n * @param keyValid -\n */\nfunction getMessage(messages: SW.messageType, keyValid: string) {\n    if(messages) return messages[keyValid];\n}\n\n/**\n * Validate a schema against a value\n *\n * @param props - data\n * @param type - data type to validate example String\n * @param validValue - value of validation\n * @param keyValid - key main\n */\nfunction validData(\n    props: SW.compareProps, type: any, validValue: any, keyValid: string\n): Promise<SW.argValid | boolean> {\n    return new Promise((resolve) => {\n\n        const {value, scheme, message: messages, key: key_main} = props;\n\n        const funcValid = funcArguments[keyValid];\n        const message = typeof messages  == 'string' ? messages : (\n            messages ?? getMessage(messages, keyValid)\n        );\n\n        const messDefault = messageArgument[keyValid];\n\n        if(!funcValid({validValue, value, type, scheme})) {\n            resolve(message ?? messDefault({validValue, value, type, keyValid, key_main}));\n        }\n\n        resolve(false);\n    })\n}\n\n/**\n * Validate a schema against a value\n *\n * @param props - data\n * @param type - data type to validate example String\n */\nasync function validExtractArgument (\n    props: SW.compareProps, type: any\n): Promise<(SW.argValid | boolean)[]> {\n    const validResponse = [];\n    const {scheme} = props;\n\n    /**\n     *\n     */\n    if(scheme['required']) {\n        const resp = await validData(props, type, scheme['required'], 'required')\n        if(resp) validResponse.push(resp);\n    }\n\n    /**\n     *\n     */\n    if(scheme['min']){\n        const resp = await validData(props, type, scheme['min'], 'min');\n        if(resp) validResponse.push(resp);\n    }\n\n    /**\n     *\n     */\n    if(scheme['max']) {\n        const resp = await validData(props, type, scheme['max'], 'max');\n        if(resp) validResponse.push(resp);\n    }\n\n    /**\n     *\n     */\n    if(scheme['validation']) {\n        const resp =await validData(props, type, scheme['validation'], 'validation')\n        if(resp) validResponse.push(resp)\n    }\n\n    return validResponse;\n}\n\n/**\n * validate Message\n *\n * @param errors -\n */\nasync function validRespArgument (errors: (SW.argValid | boolean)[]): Promise<boolean> {\n    return !errors.length;\n}\n\n/**\n * Validate an argument schema\n *\n * @param props - data\n *\n * @example\n * ```json\n * {\n *     value: \"example@sandwich.com\"\n *     key: \"email\"\n *     scheme: {type: Sandwich.String, strict: true}\n * }\n * ```\n */\nasync function validArgument (props: SW.compareProps): Promise<SW.validArgumentResp> {\n\n    const type =  await validType(props);\n    const errors = await validExtractArgument(props, type);\n    const success = await validRespArgument(errors);\n\n    return {errors: errors, success, value: type}\n}\n\n/**\n * Extract the defined value from the req or in the schema\n * (any value passed by req will be replaced by the value is defined in the schema)\n *\n * @param reqBody - data body\n * @param scheme -\n * @param key - field key to validate\n */\nfunction getValue(reqBody: object, scheme: SW.scheme, key: string | number): any {\n    const defined_value = scheme['value'] ?? reqBody[key];\n    return defined_value instanceof Function ? defined_value() : defined_value;\n}\n\n/**\n * This function validates all body data specified in the arguments\n *\n * @param valueOf - true stops returning the data to its primitive value of its instance\n * @param reqBody - request body\n * ```json\n * {email: \"example@sandwich.com\"}\n * ```\n * @param schemes - schemes of validation `{ email: {type: Sandwich.String, strict: true} }`\n */\nexport async function argument(\n    valueOf: boolean, reqBody: object, schemes?: SW.schemes\n): Promise<SW.argumentProps> {\n    const resp = {};\n    const body = {};\n    const errors: SW.ErrorStatus[] = []\n\n    if(!schemes) Exception.server_error({message: `schemes is ${schemes}`})\n\n    for (const key in schemes) {\n        const scheme = schemes[key] ?? null;\n        if(scheme) {\n\n            const validated = await validArgument({\n                value: getValue(reqBody, scheme, key),\n                key: key,\n                message: scheme['message'],\n                scheme: scheme\n            });\n\n            Object.defineProperty(resp, key, {\n                enumerable: true,\n                value: validated\n            });\n\n            Object.defineProperty(body, key, {\n                enumerable: true,\n                value: valueOf || !validated.value ? validated.value : validated.value.valueOf()\n            });\n\n            if (validated.errors.length) {\n                errors.push({[key]: validated.errors})\n            }\n\n        }\n    }\n\n    return {\n        argument: resp,\n        body,\n        errors\n    };\n}\n","import {isBrowser} from '../utils/help'\nimport {Exception} from \"../utils/message\";\nimport {ResponseVerifyErrors, ErrorStatus} from \"../../functions\";\n\n/**\n * validate errors and send message\n *\n * @param errors -\n */\nexport async function verifyErrors(\n    errors: ErrorStatus[]\n): Promise<ResponseVerifyErrors | any> {\n\n    const response: ResponseVerifyErrors = {\n        errors: [],\n        message: 'args_validation_successful'\n    }\n\n    if (errors.length) {\n        response.errors = errors;\n        response.message = 'args_validation_errors';\n        isBrowser() ? Exception.error(response) : Exception.bad_request(response);\n    } else {\n        return response\n    }\n}\n","import {argument} from \"../validators/argument\";\nimport {verifyErrors} from \"../validators/verifyErrors\";\nimport {\n    ParserSchemeFunction,\n    ParserSchemesClass,\n    HandlerParserSchemes,\n    TypeValid,\n    ValidatorsClass,\n    valuesArgs,\n    schemes,\n    scheme,\n    valueOf,\n    FuncResolvePromiseScheme,\n    resolvePromiseScheme\n} from \"../../functions\";\n\n/**\n * Analyze the values provided according to your schema.\n *\n * @param valueOf - Determines how validated arguments and parameters are extracted.\n * @param schemes - schemes\n * ```json\n * {\n *     email: {type: Sandwich.String, required: true, strict: true},\n *     password: {type: Sandwich.String, required: true, strict: true, min: 8}\n * }\n * ```\n * @param values - data body request.\n * @returns HandlerParserSchemes\n */\nexport const parserSchemes: HandlerParserSchemes = async (\n    valueOf, schemes, values\n) => {\n    const\n        /**\n         *  validate data\n         *\n         * @param result_argument - result argument\n         */\n        result_argument = await argument(valueOf ?? true, values ?? {}, schemes),\n\n        /**\n         * check for errors in arguments\n         *\n         * @param responseError - bug check response\n         */\n        responseError = await verifyErrors(result_argument.errors);\n\n    return {\n        schemes: result_argument.argument,\n        args: result_argument.body,\n        errors: responseError.errors,\n        message: responseError.message\n    }\n}\n\n/**\n * Types of validations\n */\nexport class Types implements TypeValid {\n    String = String\n    Number = Number\n    Array = Array\n    Boolean = Boolean\n    Object = Object\n}\n\n/**\n * Instance Types\n */\nexport const Type = new Types();\n\n/**\n * A Validators class, with functions that allow rigorously validating\n * data, according to a specific pattern (a schema).\n *\n * @remarks\n * A schema determines the validation pattern of a value, and if it\n * does not meet the conditions of the pattern, an exception is\n * thrown with the return of an array of the errors found.\n *\n * @beta\n */\nclass Validators extends Types implements ValidatorsClass {\n\n    /**\n     * values to be validated\n     * @defaultValue undefined\n     */\n    values: valuesArgs = undefined;\n\n    /**\n     * Object type property. List of validation schemes.\n     * @defaultValue object\n     */\n    schemes: schemes;\n\n    /**\n     * Boolean type property. Determines how validated arguments\n     * and parameters are extracted.\n     * @defaultValue true\n     */\n    valueOf: valueOf = true;\n\n    /**\n     * Creates an instance of Sandwiches.\n     */\n    constructor(schemes?: schemes) {\n        super();\n        this.schemes = schemes ?? null;\n    }\n\n    /**\n     * parse and validate request body data\n     *\n     * @param values - Data subject to validation\n     * @returns ParserSchemesResponse\n     */\n    parserSchemes(values?: valuesArgs): ParserSchemeFunction\n    {\n        return parserSchemes(\n            this.valueOf, this.schemes, this.values ?? values\n        )\n    }\n\n    /**\n     * Reset data:\n     * ```ts\n     *  this.valueOf = true;\n     *  this.schemes = {};\n     *  this.values = undefined;\n     * ```\n     */\n    reset() {\n        this.valueOf = true;\n        this.schemes = null;\n        this.values = undefined;\n    }\n}\n\nexport default Validators;\n\nconst validator = new Validators();\n\n/**\n * addSchemes add schemes\n *\n * @privateRemarks\n * addSchemes function serving the ParserSchemes class for\n * adding validation schemes\n *\n * @param schemes - Validation schemes\n */\nconst addSchemes = (schemes: unknown) => {\n    validator.schemes = Object.assign(validator.schemes ?? {}, schemes);\n}\n\n/**\n * handle the function addScheme, which belongs to the class ParserSchemes\n *\n * @param callBack - receives as argument the resolution function of\n * new Promise, and the value processed in the callback is passed to\n * it, this value is the validation scheme of an element\n */\nconst handlerAddScheme = (callBack: FuncResolvePromiseScheme) => {\n    new Promise((resolve) => {\n        callBack(resolve);\n    }).then((schemes: unknown) => {\n        addSchemes(schemes);\n    });\n}\n\n/**\n * Processes and assigns to validator.schemes the validation\n * schemes declared as property in a class.\n *\n * @param schemesEntries - Matrix of schemes\n *\n * @example\n * Matrix schemes:\n * ```json\n * [\n *  ['name' {type: Type.String, required: true, strict: true}],\n *  ['email' {type: Type.String, required: true, strict: true}]\n * ]\n * ```\n */\nconst addPropertySchemesValidator = <T>(schemesEntries: [keyof T, T[keyof T]][]): Promise<void> => {\n    return new Promise((resolve) => {\n        resolve(Object.fromEntries(schemesEntries));\n    }).then((schemeData) => {\n        validator.schemes = Object.assign(validator.schemes, schemeData);\n    })\n}\n\nexport class ParserSchemes implements ParserSchemesClass {\n\n    /**\n     * instance ParserSchemes\n     */\n    constructor(valueOf?: boolean) {\n        validator.reset();\n        validator.valueOf = valueOf ?? true;\n    }\n\n    /**\n     * Activating the schema validation functions\n     */\n    parserSchemes(values?: valuesArgs): ParserSchemeFunction {\n        return addPropertySchemesValidator(Object.entries(this))\n            .then(()=> validator.parserSchemes(values));\n    }\n\n    /**\n     * add schemes\n     *\n     * @param schemes - Validations schemes\n     */\n    addSchemes(schemes: schemes) {\n        addSchemes(schemes);\n    }\n\n    /**\n     * The addScheme property must be represented in the child class as a function\n     * within this function the schemas are loaded for the validation of the arguments\n     *\n     * @example\n     *```ts\n     * addScheme({type: Sandwich.String, required: true, strict: true}, ['email'])\n     *```\n     * @param scheme - Validations scheme\n     * @param arg - Name of the argument to validate, can be a string or an array of strings.\n     *\n     * @example\n     * example param arg:\n     * ```ts\n     * 'password' or ['password', 'passwordConfirm']\n     * ```\n     *\n     */\n    addScheme(scheme: scheme, arg: string | string[]) {\n        handlerAddScheme((add: resolvePromiseScheme): void => {\n            if(typeof arg == 'string') {\n                add({\n                    [arg]: scheme\n                });\n            } else {\n                let sh = {}\n                for (let i = 1; i <= arg.length; i++) {\n                    sh = {\n                        [arg[i -1]]: scheme,\n                        ...sh\n                    }\n                    if(i == arg.length) add(sh);\n                }\n            }\n        });\n    }\n}\n","export const contextHttp: any = (() =>{\n    class contextHttp {\n        request = undefined\n        response = undefined;\n    }\n\n    return new contextHttp();\n})();\n\nexport const requestGet = () => contextHttp.request;\nexport const responseGet = () => contextHttp.response;\n","import {Routers as Route} from '../../functions';\nimport {isArray} from \"../utils/help\";\n\n/*\nconst METHODS_PARAMS = {\n    get: 'one',\n    put: 'put',\n    post: 'stag',\n    delete: 'delete',\n    patch: 'patch'\n}\n\nconst METHODS = {\n    get: 'get',\n    post: 'post',\n}*/\n\n/**\n *\n * @param classResource -\n * @param middleware -\n */\nconst handlerResource = (classResource: Route.HandlerResource, middleware: Route.middlewares) => {\n    return () => {\n        return {classResource, middleware}\n    }\n}\n\n/**\n *\n * @param resource -\n */\nconst getParams = <P>(...resource:Route.ResourceArgs<P>): Route.MiddlewareResource => {\n    const length = resource.length;\n    const middleware: any = length === 3 ? resource[0]: undefined;\n    const paths: any = length === 3 ? resource[1]: resource[0];\n    const classes: any = length === 3 ? resource[2]: resource[1];\n\n    return [middleware, paths, classes];\n}\n\n/**\n *\n * @beta\n */\nexport class Routers implements Route {\n\n    /**\n     *\n     */\n    readonly app: Route.router;\n\n    /**\n     *\n     * @param app -\n     */\n    constructor(app: Route.router) {\n        this.app = app;\n    }\n\n    /**\n     *\n     * @param resource -\n     */\n    resource<P>(...resource: Route.ResourceArgs<P>) {\n        const [middleware, paths, classResource] = getParams<P>(...resource);\n        this.router(middleware, paths, classResource);\n    }\n\n    /**\n     *\n     * @param middleware -\n     * @param paths -\n     * @param classResource -\n     */\n    router(middleware: Route.middlewares, paths: Route.paths, classResource: Route.HandlerResource) {\n        if (isArray(paths)){\n            for (let i = 0; i < paths.length; i++) {\n                this.app.use(paths[i], handlerResource(classResource, middleware))\n            }\n        } else {\n            this.app.use(paths, handlerResource(classResource, middleware));\n        }\n    }\n\n    /**\n     *\n     * @param resource -\n     */\n    get<P>(...resource: Route.ResourceArgs<P>) {\n        const [middleware, paths, classResource] = getParams<P>(...resource);\n        this.app.get(paths, handlerResource(classResource, middleware));\n    }\n}\n\nexport default Routers;\n","import * as SW from '../../functions';\nimport {Message, Exception} from '../utils/message';\nimport {contextHttp} from '../utils/contextHttp';\nimport {get} from '../utils/admixtures';\nimport {getMiddlewares} from \"../utils/help\";\nimport {\n    FuncMiddleware,\n    middlewareReturn,\n    middlewares,\n    middlewareNextReturn,\n    ReqType,\n    ResType,\n    execListFuncReturn\n} from \"../../functions\";\n\n/**\n * middleware_next execution of each declared FuncMiddleware\n *\n * @param req - Http Request\n * @param res - Http Response\n * @param funcMiddleware - FuncMiddleware The middleware function runs in the middleware_next function\n * @param train -\n */\nexport function middlewareNext(\n    funcMiddleware: FuncMiddleware, req: ReqType, res: ResType, train: any\n): Promise<middlewareNextReturn> {\n    return new Promise((next) => {\n        funcMiddleware({req, res, next, train});\n    });\n}\n\n/**\n * execListFunc controls the execution of each declared FuncMiddleware\n *\n * @param middlewares -\n * @param req - Http Request\n * @param res - Http Response\n */\nasync function execListFunc(\n    middlewares: FuncMiddleware[], req: ReqType, res: ResType\n): Promise<execListFuncReturn> {\n    let train = {};\n    for (const middleware of middlewares) {\n        const result = await middlewareNext(middleware, req, res, train);\n        train = Object.assign(train, result ?? {});\n        if (!result) break;\n    }\n    return train;\n}\n\n/**\n * Main function: extract the middleware declared in the Sandwich.handler (Class, middleware) function\n *\n * @example\n * ```ts\n * Sandwich.handler (Users, [{\n * methods: ['POST'],\n * middleware: [isAuth]\n *}])\n *```\n *\n * @remarks\n * The get_middlewares function takes care of the extraction\n *\n * @param req - Http Request\n * @param res - Http Response\n * @param middlewares - array functions or function\n * @param method - `{string}` method request\n */\nexport async function middleware (\n    req: ReqType, res: ResType, middlewares: middlewares | undefined, method: string\n): Promise<middlewareReturn> {\n    if (!middlewares) return true;\n    const functions = await getMiddlewares(middlewares, method ?? '');\n    return await execListFunc(\n        functions instanceof  Array ? functions : [functions]\n        , req, res)\n        .then((resp: any) => resp);\n}\n\n/**\n * Prepare the class to be used by routing\n *\n * @example\n * Controller function usage example\n *\n * ```ts\n * Sandwich.handler(Users, [isAuthenticated])\n * ```\n *\n * @param classRequest - Class that will serve as a pillow for routing.\n * @param middlewares - Middleware functions that run before the final function or final middleware\n * @returns\n */\nfunction Handler(classRequest: SW.HandlerResource, middlewares?: SW.middlewares): SW.HandlerResponse {\n    return async (req: SW.Any, res: SW.Any, next?: SW.Next) => {\n        try {\n            const reqMethod: string = req.method;\n\n            contextHttp.response = res;\n            contextHttp.request = req;\n\n            const $classRequest = new classRequest();\n\n            const again = (\n                get($classRequest, reqMethod.toLowerCase(), true)\n            );\n\n            if (!again) return Exception.bad_request({\n                message: `HTTP ${reqMethod} request is not allowed`\n            });\n\n            $classRequest.train = await middleware(\n                req, res, middlewares, reqMethod\n            )\n\n            await again(req, res, next);\n\n        } catch (error: any) {\n            Message.response(res, error.statusCode ?? 500, error)\n        }\n    }\n}\n\nexport default Handler;\n","import * as SW from '../../functions';\nimport Routers from './routers';\nimport Validators from \"./validators\";\nimport Handler from './handler';\n\n\n/**\n * Returns a class called Resource, which loads the resources. Also, after loading the necessary\n * resources for the routing job, it loads the initial configuration for the validation of the\n * arguments and parameters.\n *\n *\n * @remarks\n * The configuration of the arguments and parameters will be executed through the\n * parser_schemes function, which is a property of the Resource class.\n *\n * @example\n * examples of schemes:\n * ```json\n * {\n *   email: {type: Sandwich.String, required: true, strict: true,\n *   password: {type: Sandwich.String, required: true, strict: true, min: 8,\n * }\n * ```\n */\nexport class Resource implements SW.Resource {\n\n    /**\n     * Loads the data returned by the middleware, in case the promise is fulfilled.\n     *\n     */\n    train: SW.Any;\n\n    /**\n     * http request functions\n     *\n     */\n    request: SW.Any;\n\n}\n\n/**\n *\n */\nclass Sandwich extends Validators implements SW.SandwichClass {\n    /**\n     *\n     */\n    handler = Handler;\n    /**\n     *\n     * @param app - \n     */\n    routers = (app: SW.Routers.router) => new Routers(app);\n}\n\nexport default new Sandwich();\n"],"names":[],"mappings":"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"}